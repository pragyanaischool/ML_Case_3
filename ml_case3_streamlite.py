# -*- coding: utf-8 -*-
"""ML_Case3_Streamlite.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Gy9fkVnwpWZk0pUw2RychMdGyJOcM5L1
"""

import streamlit as st
import pandas as pd
import joblib
from sklearn.ensemble import RandomForestClassifier
from sklearn.preprocessing import StandardScaler

scaler = StandardScaler()


#Loading up the Regression model we created
clf = RandomForestClassifier()

model = joblib.load('clf_new.joblib')
#Caching the model for faster loading
@st.cache

# Define the prediction function
def predict(age, sex, cp, trestbps, chol, fbs, restecg, thalach,exang, oldpeak,slope,ca, thal):
    if sex == 'Male':
        sex = 1
    elif sex == 'Female':
        sex = 0 
    
    data = pd.read_csv("heart_cleveland.csv") #path folder of the data file
    data = data.drop(['condition'], axis =1)
    scaler.fit_transform(data)
    df = pd.DataFrame([[age, sex, cp, trestbps, chol, fbs, restecg, thalach,exang, oldpeak,slope,ca, thal]], columns=['age', 'sex', 'cp', 'trestbps', 'chol', 'fbs', 'restecg', 'thalach','exang', 'oldpeak','slope','ca', 'thal'])
    x_test = scaler.transform(df)
    prediction = model.predict(x_test)
    return prediction


st.title('Heart Disease Classification: 0 No disease, 1 heart disease')
st.image("""https://familydoctor.org/wp-content/uploads/2000/09/42187220_l.jpg""")
st.header('Enter the characteristics of the Heart:')
age = st.number_input('Age:', min_value=1, max_value=100, value=1)
sex = st.radio('Gender:', ('Male', 'Female'))
cp = st.number_input('cp:', min_value=0, max_value=3, value=1)
trestbps = st.number_input('trestbps:', min_value=80, max_value=200, value=80)
chol = st.number_input('chol:',min_value=80, max_value=400, value=80)
fbs = st.number_input('fbs:', min_value=0, max_value=1, value=1)
restecg = st.number_input('restecg:', min_value=0, max_value=2, value=1)
thalach = st.number_input('thalach:',min_value=80, max_value=400, value=80)
exang = st.number_input('exang:', min_value=0, max_value=1, value=1)
oldpeak = st.number_input('oldpeak:', min_value=0.1, max_value=10.0, value=1.0)
slope = st.number_input('slope:', min_value=0, max_value=2, value=1)
ca =st.number_input('ca:', min_value=0, max_value=3, value=1)
thal =st.number_input('thal:', min_value=0, max_value=3, value=1)

if st.button('Submit_Health_Values'):
    disease = predict(age, sex, cp, trestbps, chol, fbs, restecg, thalach,exang, oldpeak,slope,ca, thal)
    st.success(f'The Diagnose of heart Disease (1 Heart Disease Exist, 0 Heart Is healthy) : {disease[0]:.2f}')
